@model Đồ_án_của_Thái.Areas.Admin.ViewModelsAdmin.ComicViewModelsAdmin

@{
    ViewBag.Title = "CreateAdmin";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";}

<h2>Thêm Truyện</h2>
@using (Html.BeginForm("CreateAdmin", "ComicsAdmin"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.NameComic, "Tên truyện", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameComic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameComic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, "Tác giả", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, "Thể Loại", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Category,
                        new SelectList(Model.Categories, "Id", "Name"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, "Mô tả", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                <div id="titleCountdown"></div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Picture, "Hình ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Picture, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
                <input type="file" name="fileUpload" id="fileUpload" accept="image/*" style="display: none;" />
                <input type="button" id="btnUpload" value="Chọn" class="btn btn-success" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index", "Home", null, new { @class = "btn btn-warning" })
</div>
@section upload
 {
    <script>
        $(function () {
            $('#btnUpload').click(function () {
                $('#fileUpload').trigger('click');
            });
        });
        $('#fileUpload').change(function () {
            if (window.FormData !== undefined) {
                var fileUpload = $('#fileUpload').get(0);
                var files = fileUpload.files;
                var formData = new FormData();
                formData.append('file', files[0]);
                $.ajax(
                    {
                        type: 'POST',
                        url: '/Comics/ProcessUpload',
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (urlImage) {
                            $('#pictureUpload').attr('src', urlImage);
                            $('#Picture').val(urlImage);
                        },
                        error: function (err) {
                            alert('Error ', err.statusText);
                        }
                    });
            }
        });
    </script>
}
@section count
{
    <script>
        $(document).ready(function () {
            var maxLength = 1000; // Số ký tự tối đa
            $('#Title').keyup(function () {
                var length = $(this).val().length;
                var countdown = maxLength - length;
                $('#titleCountdown').text(countdown + ' ký tự còn lại.');
            });
        });
    </script>
}
<style>
    input#btnUpload {
        margin-top: 5px;
    }
</style>